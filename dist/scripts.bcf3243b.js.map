{"version":3,"sources":["scripts/renderer.js","scripts/index.js"],"names":["COLS","ROWS","SCALE","Monitor","canvas","scale","cols","rows","display","Array","i","console","log","width","height","canvasCtx","getContext","x","y","fillStyle","fillRect","Math","floor","setPixel","paint","renderer","Renderer","document","getElementById","testRender"],"mappings":"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","file":"scripts.bcf3243b.js","sourceRoot":"..","sourcesContent":["const COLS = 64;\r\nconst ROWS = 32;\r\nconst SCALE = 20;\r\n\r\nclass Monitor {\r\n    constructor(canvas, scale) {\r\n        this.cols = COLS;\r\n        this.rows = ROWS;\r\n\r\n        this.display = new Array(this.cols * this.rows);\r\n        for(let i=0; i < this.cols*this.rows; i++)\r\n            this.display[i] = 0;\r\n        this.canvas = canvas;\r\n        this.scale = SCALE;\r\n        console.log(this.canvas);\r\n        \r\n        this.canvas.width = this.cols * this.scale;\r\n        this.canvas.height = this.rows * this.scale;\r\n\r\n        this.canvasCtx = this.canvas.getContext('2d');\r\n    }\r\n\r\n    setPixel(x, y) {\r\n        if(x > this.cols)\r\n            x -= this.cols;\r\n        else if(x < 0)\r\n            x += this.cols;\r\n\r\n        if(y > this.rows)\r\n            y -= this.rows;\r\n        else if(y<0)\r\n            y += this.rows;\r\n\r\n        this.display[x + (y * this.cols)] ^= 1;\r\n        return this.display[x + (y * this.cols)] != 1;\r\n    }\r\n\r\n    clear() {\r\n        this.display = new Array(this.cols * this.rows);\r\n        for(let i=0; i < this.cols*this.rows; i++)\r\n            this.display[i] = 0;\r\n    }\r\n\r\n    paint() {\r\n        this.canvasCtx.fillStyle = '#000';\r\n        this.canvasCtx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        for(let i=0; i < this.cols*this.rows; i++) {\r\n            let x = (i % this.cols) * this.scale;\r\n            let y = Math.floor(i / this.cols) * this.scale;\r\n\r\n            if(this.display[i] == 1) {\r\n                this.canvasCtx.fillStyle = '#FFF';\r\n                this.canvasCtx.fillRect(x, y, this.scale, this.scale);\r\n            }\r\n        }\r\n    }\r\n\r\n    testRender() {\r\n        this.setPixel(0, 0);\r\n        this.setPixel(5, 2);\r\n        this.paint();\r\n    }\r\n}\r\n\r\nexport default Monitor;","import Renderer from './renderer';\r\n\r\nconst renderer = new Renderer(document.getElementById('screen'))\r\n\r\nrenderer.testRender();"]}